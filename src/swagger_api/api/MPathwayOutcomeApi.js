/*
 * Extractor Engine API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v3.76(UAT)
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {MPathwayOutcomeCompactDtoApiResponse} from '../model/MPathwayOutcomeCompactDtoApiResponse';
import {MPathwayOutcomeCompactDtoIEnumerableApiResponse} from '../model/MPathwayOutcomeCompactDtoIEnumerableApiResponse';
import {MPathwayOutcomeCompactDtoPagedListApiResponse} from '../model/MPathwayOutcomeCompactDtoPagedListApiResponse';
import {MPathwayOutcomeCreateDto} from '../model/MPathwayOutcomeCreateDto';
import {MPathwayOutcomeDtoApiResponse} from '../model/MPathwayOutcomeDtoApiResponse';
import {MPathwayOutcomeEditDto} from '../model/MPathwayOutcomeEditDto';
import {MPathwayOutcomeFilterDtoIEnumerableApiResponse} from '../model/MPathwayOutcomeFilterDtoIEnumerableApiResponse';

/**
* MPathwayOutcome service.
* @module api/MPathwayOutcomeApi
* @version v3.76(UAT)
*/
export class MPathwayOutcomeApi {

    /**
    * Constructs a new MPathwayOutcomeApi. 
    * @alias module:api/MPathwayOutcomeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the apiMPathwayOutcomeGet operation.
     * @callback moduleapi/MPathwayOutcomeApi~apiMPathwayOutcomeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MPathwayOutcomeCompactDtoIEnumerableApiResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/MPathwayOutcomeApi~apiMPathwayOutcomeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiMPathwayOutcomeGet(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer', 'X-RS-Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MPathwayOutcomeCompactDtoIEnumerableApiResponse;

      return this.apiClient.callApi(
        '/api/MPathwayOutcome', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiMPathwayOutcomeGetAllByNameGet operation.
     * @callback moduleapi/MPathwayOutcomeApi~apiMPathwayOutcomeGetAllByNameGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MPathwayOutcomeFilterDtoIEnumerableApiResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.name 
     * @param {module:api/MPathwayOutcomeApi~apiMPathwayOutcomeGetAllByNameGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiMPathwayOutcomeGetAllByNameGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'name': opts['name']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer', 'X-RS-Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MPathwayOutcomeFilterDtoIEnumerableApiResponse;

      return this.apiClient.callApi(
        '/api/MPathwayOutcome/GetAllByName', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiMPathwayOutcomeGetAllByPageGet operation.
     * @callback moduleapi/MPathwayOutcomeApi~apiMPathwayOutcomeGetAllByPageGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MPathwayOutcomeCompactDtoPagedListApiResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageNumber 
     * @param {Number} opts.pageSize 
     * @param {module:api/MPathwayOutcomeApi~apiMPathwayOutcomeGetAllByPageGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiMPathwayOutcomeGetAllByPageGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'PageNumber': opts['pageNumber'],'PageSize': opts['pageSize']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer', 'X-RS-Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MPathwayOutcomeCompactDtoPagedListApiResponse;

      return this.apiClient.callApi(
        '/api/MPathwayOutcome/GetAllByPage', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiMPathwayOutcomeGetByGuidGuidGet operation.
     * @callback moduleapi/MPathwayOutcomeApi~apiMPathwayOutcomeGetByGuidGuidGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MPathwayOutcomeDtoApiResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} guid 
     * @param {module:api/MPathwayOutcomeApi~apiMPathwayOutcomeGetByGuidGuidGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiMPathwayOutcomeGetByGuidGuidGet(guid, callback) {
      
      let postBody = null;
      // verify the required parameter 'guid' is set
      if (guid === undefined || guid === null) {
        throw new Error("Missing the required parameter 'guid' when calling apiMPathwayOutcomeGetByGuidGuidGet");
      }

      let pathParams = {
        'guid': guid
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer', 'X-RS-Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MPathwayOutcomeDtoApiResponse;

      return this.apiClient.callApi(
        '/api/MPathwayOutcome/GetByGuid/{guid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiMPathwayOutcomeIdDelete operation.
     * @callback moduleapi/MPathwayOutcomeApi~apiMPathwayOutcomeIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MPathwayOutcomeCompactDtoApiResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id 
     * @param {module:api/MPathwayOutcomeApi~apiMPathwayOutcomeIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiMPathwayOutcomeIdDelete(id, callback) {
      
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiMPathwayOutcomeIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer', 'X-RS-Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MPathwayOutcomeCompactDtoApiResponse;

      return this.apiClient.callApi(
        '/api/MPathwayOutcome/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiMPathwayOutcomeIdGet operation.
     * @callback moduleapi/MPathwayOutcomeApi~apiMPathwayOutcomeIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MPathwayOutcomeDtoApiResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id 
     * @param {module:api/MPathwayOutcomeApi~apiMPathwayOutcomeIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiMPathwayOutcomeIdGet(id, callback) {
      
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiMPathwayOutcomeIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer', 'X-RS-Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MPathwayOutcomeDtoApiResponse;

      return this.apiClient.callApi(
        '/api/MPathwayOutcome/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiMPathwayOutcomePost operation.
     * @callback moduleapi/MPathwayOutcomeApi~apiMPathwayOutcomePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MPathwayOutcomeDtoApiResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/MPathwayOutcomeCreateDto} opts.body 
     * @param {module:api/MPathwayOutcomeApi~apiMPathwayOutcomePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiMPathwayOutcomePost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer', 'X-RS-Key'];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MPathwayOutcomeDtoApiResponse;

      return this.apiClient.callApi(
        '/api/MPathwayOutcome', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiMPathwayOutcomePut operation.
     * @callback moduleapi/MPathwayOutcomeApi~apiMPathwayOutcomePutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MPathwayOutcomeDtoApiResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/MPathwayOutcomeEditDto} opts.body 
     * @param {module:api/MPathwayOutcomeApi~apiMPathwayOutcomePutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiMPathwayOutcomePut(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer', 'X-RS-Key'];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MPathwayOutcomeDtoApiResponse;

      return this.apiClient.callApi(
        '/api/MPathwayOutcome', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}