/*
 * Extractor Engine API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v3.76(UAT)
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {MStepOutcomeCommunicationCompactDtoApiResponse} from '../model/MStepOutcomeCommunicationCompactDtoApiResponse';
import {MStepOutcomeCommunicationCompactDtoIEnumerableApiResponse} from '../model/MStepOutcomeCommunicationCompactDtoIEnumerableApiResponse';
import {MStepOutcomeCommunicationCompactDtoPagedListApiResponse} from '../model/MStepOutcomeCommunicationCompactDtoPagedListApiResponse';
import {MStepOutcomeCommunicationCreateDto} from '../model/MStepOutcomeCommunicationCreateDto';
import {MStepOutcomeCommunicationDtoApiResponse} from '../model/MStepOutcomeCommunicationDtoApiResponse';
import {MStepOutcomeCommunicationEditDto} from '../model/MStepOutcomeCommunicationEditDto';

/**
* MStepOutcomeCommunication service.
* @module api/MStepOutcomeCommunicationApi
* @version v3.76(UAT)
*/
export class MStepOutcomeCommunicationApi {

    /**
    * Constructs a new MStepOutcomeCommunicationApi. 
    * @alias module:api/MStepOutcomeCommunicationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the apiMStepOutcomeCommunicationGet operation.
     * @callback moduleapi/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MStepOutcomeCommunicationCompactDtoIEnumerableApiResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiMStepOutcomeCommunicationGet(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer', 'X-RS-Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MStepOutcomeCommunicationCompactDtoIEnumerableApiResponse;

      return this.apiClient.callApi(
        '/api/MStepOutcomeCommunication', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiMStepOutcomeCommunicationGetAllByPageGet operation.
     * @callback moduleapi/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationGetAllByPageGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MStepOutcomeCommunicationCompactDtoPagedListApiResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageNumber 
     * @param {Number} opts.pageSize 
     * @param {module:api/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationGetAllByPageGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiMStepOutcomeCommunicationGetAllByPageGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'PageNumber': opts['pageNumber'],'PageSize': opts['pageSize']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer', 'X-RS-Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MStepOutcomeCommunicationCompactDtoPagedListApiResponse;

      return this.apiClient.callApi(
        '/api/MStepOutcomeCommunication/GetAllByPage', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiMStepOutcomeCommunicationGetAllPageByEntityIdEntityIdGet operation.
     * @callback moduleapi/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationGetAllPageByEntityIdEntityIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MStepOutcomeCommunicationCompactDtoPagedListApiResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} entityId 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageNumber 
     * @param {Number} opts.pageSize 
     * @param {module:api/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationGetAllPageByEntityIdEntityIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiMStepOutcomeCommunicationGetAllPageByEntityIdEntityIdGet(entityId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'entityId' is set
      if (entityId === undefined || entityId === null) {
        throw new Error("Missing the required parameter 'entityId' when calling apiMStepOutcomeCommunicationGetAllPageByEntityIdEntityIdGet");
      }

      let pathParams = {
        'entityId': entityId
      };
      let queryParams = {
        'PageNumber': opts['pageNumber'],'PageSize': opts['pageSize']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer', 'X-RS-Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MStepOutcomeCommunicationCompactDtoPagedListApiResponse;

      return this.apiClient.callApi(
        '/api/MStepOutcomeCommunication/GetAllPageByEntityId/{entityId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiMStepOutcomeCommunicationGetAllStepOutcomeCommunicationByMStepOutcomeIdMStepOutcomeIdGet operation.
     * @callback moduleapi/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationGetAllStepOutcomeCommunicationByMStepOutcomeIdMStepOutcomeIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MStepOutcomeCommunicationCompactDtoIEnumerableApiResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} mStepOutcomeId 
     * @param {module:api/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationGetAllStepOutcomeCommunicationByMStepOutcomeIdMStepOutcomeIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiMStepOutcomeCommunicationGetAllStepOutcomeCommunicationByMStepOutcomeIdMStepOutcomeIdGet(mStepOutcomeId, callback) {
      
      let postBody = null;
      // verify the required parameter 'mStepOutcomeId' is set
      if (mStepOutcomeId === undefined || mStepOutcomeId === null) {
        throw new Error("Missing the required parameter 'mStepOutcomeId' when calling apiMStepOutcomeCommunicationGetAllStepOutcomeCommunicationByMStepOutcomeIdMStepOutcomeIdGet");
      }

      let pathParams = {
        'mStepOutcomeId': mStepOutcomeId
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer', 'X-RS-Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MStepOutcomeCommunicationCompactDtoIEnumerableApiResponse;

      return this.apiClient.callApi(
        '/api/MStepOutcomeCommunication/GetAllStepOutcomeCommunicationByMStepOutcomeId/{mStepOutcomeId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiMStepOutcomeCommunicationGetByGuidGuidGet operation.
     * @callback moduleapi/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationGetByGuidGuidGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MStepOutcomeCommunicationDtoApiResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} guid 
     * @param {module:api/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationGetByGuidGuidGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiMStepOutcomeCommunicationGetByGuidGuidGet(guid, callback) {
      
      let postBody = null;
      // verify the required parameter 'guid' is set
      if (guid === undefined || guid === null) {
        throw new Error("Missing the required parameter 'guid' when calling apiMStepOutcomeCommunicationGetByGuidGuidGet");
      }

      let pathParams = {
        'guid': guid
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer', 'X-RS-Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MStepOutcomeCommunicationDtoApiResponse;

      return this.apiClient.callApi(
        '/api/MStepOutcomeCommunication/GetByGuid/{guid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiMStepOutcomeCommunicationIdDelete operation.
     * @callback moduleapi/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MStepOutcomeCommunicationCompactDtoApiResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id 
     * @param {module:api/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiMStepOutcomeCommunicationIdDelete(id, callback) {
      
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiMStepOutcomeCommunicationIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer', 'X-RS-Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MStepOutcomeCommunicationCompactDtoApiResponse;

      return this.apiClient.callApi(
        '/api/MStepOutcomeCommunication/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiMStepOutcomeCommunicationIdGet operation.
     * @callback moduleapi/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MStepOutcomeCommunicationDtoApiResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id 
     * @param {module:api/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiMStepOutcomeCommunicationIdGet(id, callback) {
      
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiMStepOutcomeCommunicationIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer', 'X-RS-Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MStepOutcomeCommunicationDtoApiResponse;

      return this.apiClient.callApi(
        '/api/MStepOutcomeCommunication/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiMStepOutcomeCommunicationPost operation.
     * @callback moduleapi/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MStepOutcomeCommunicationDtoApiResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/MStepOutcomeCommunicationCreateDto} opts.body 
     * @param {module:api/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiMStepOutcomeCommunicationPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer', 'X-RS-Key'];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MStepOutcomeCommunicationDtoApiResponse;

      return this.apiClient.callApi(
        '/api/MStepOutcomeCommunication', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiMStepOutcomeCommunicationPut operation.
     * @callback moduleapi/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MStepOutcomeCommunicationDtoApiResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/MStepOutcomeCommunicationEditDto} opts.body 
     * @param {module:api/MStepOutcomeCommunicationApi~apiMStepOutcomeCommunicationPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiMStepOutcomeCommunicationPut(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer', 'X-RS-Key'];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MStepOutcomeCommunicationDtoApiResponse;

      return this.apiClient.callApi(
        '/api/MStepOutcomeCommunication', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}