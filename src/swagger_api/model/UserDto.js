/*
 * Extractor Engine API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v3.76(UAT)
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {CandidateBaseDto} from './CandidateBaseDto';
import {ClientDto} from './ClientDto';
import {ContactDto} from './ContactDto';
import {DepartmentDto} from './DepartmentDto';
import {RoleDto} from './RoleDto';
import {SubRoleDto} from './SubRoleDto';

/**
 * The UserDto model module.
 * @module model/UserDto
 * @version v3.76(UAT)
 */
export class UserDto {
  /**
   * Constructs a new <code>UserDto</code>.
   * @alias module:model/UserDto
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>UserDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UserDto} obj Optional instance to populate.
   * @return {module:model/UserDto} The populated <code>UserDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new UserDto();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('uniqueGuid'))
        obj.uniqueGuid = ApiClient.convertToType(data['uniqueGuid'], 'String');
      if (data.hasOwnProperty('token'))
        obj.token = ApiClient.convertToType(data['token'], 'String');
      if (data.hasOwnProperty('fullName'))
        obj.fullName = ApiClient.convertToType(data['fullName'], 'String');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('contactNumber'))
        obj.contactNumber = ApiClient.convertToType(data['contactNumber'], 'String');
      if (data.hasOwnProperty('password'))
        obj.password = ApiClient.convertToType(data['password'], 'String');
      if (data.hasOwnProperty('passwordHash'))
        obj.passwordHash = ApiClient.convertToType(data['passwordHash'], 'Blob');
      if (data.hasOwnProperty('passwordSalt'))
        obj.passwordSalt = ApiClient.convertToType(data['passwordSalt'], 'Blob');
      if (data.hasOwnProperty('isActivated'))
        obj.isActivated = ApiClient.convertToType(data['isActivated'], 'Boolean');
      if (data.hasOwnProperty('isOTPValidated'))
        obj.isOTPValidated = ApiClient.convertToType(data['isOTPValidated'], 'Boolean');
      if (data.hasOwnProperty('isFirstTimeLogin'))
        obj.isFirstTimeLogin = ApiClient.convertToType(data['isFirstTimeLogin'], 'Boolean');
      if (data.hasOwnProperty('candidateId'))
        obj.candidateId = ApiClient.convertToType(data['candidateId'], 'Number');
      if (data.hasOwnProperty('candidate'))
        obj.candidate = CandidateBaseDto.constructFromObject(data['candidate']);
      if (data.hasOwnProperty('contactId'))
        obj.contactId = ApiClient.convertToType(data['contactId'], 'Number');
      if (data.hasOwnProperty('contact'))
        obj.contact = ContactDto.constructFromObject(data['contact']);
      if (data.hasOwnProperty('departmentId'))
        obj.departmentId = ApiClient.convertToType(data['departmentId'], 'Number');
      if (data.hasOwnProperty('department'))
        obj.department = DepartmentDto.constructFromObject(data['department']);
      if (data.hasOwnProperty('roleId'))
        obj.roleId = ApiClient.convertToType(data['roleId'], 'Number');
      if (data.hasOwnProperty('role'))
        obj.role = RoleDto.constructFromObject(data['role']);
      if (data.hasOwnProperty('subRoleId'))
        obj.subRoleId = ApiClient.convertToType(data['subRoleId'], 'Number');
      if (data.hasOwnProperty('subRole'))
        obj.subRole = SubRoleDto.constructFromObject(data['subRole']);
      if (data.hasOwnProperty('client'))
        obj.client = ClientDto.constructFromObject(data['client']);
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
    }
    return obj;
  }
}

/**
 * @member {Number} id
 */
UserDto.prototype.id = undefined;

/**
 * @member {String} uniqueGuid
 */
UserDto.prototype.uniqueGuid = undefined;

/**
 * @member {String} token
 */
UserDto.prototype.token = undefined;

/**
 * @member {String} fullName
 */
UserDto.prototype.fullName = undefined;

/**
 * @member {String} email
 */
UserDto.prototype.email = undefined;

/**
 * @member {String} contactNumber
 */
UserDto.prototype.contactNumber = undefined;

/**
 * @member {String} password
 */
UserDto.prototype.password = undefined;

/**
 * @member {Blob} passwordHash
 */
UserDto.prototype.passwordHash = undefined;

/**
 * @member {Blob} passwordSalt
 */
UserDto.prototype.passwordSalt = undefined;

/**
 * @member {Boolean} isActivated
 */
UserDto.prototype.isActivated = undefined;

/**
 * @member {Boolean} isOTPValidated
 */
UserDto.prototype.isOTPValidated = undefined;

/**
 * @member {Boolean} isFirstTimeLogin
 */
UserDto.prototype.isFirstTimeLogin = undefined;

/**
 * @member {Number} candidateId
 */
UserDto.prototype.candidateId = undefined;

/**
 * @member {module:model/CandidateBaseDto} candidate
 */
UserDto.prototype.candidate = undefined;

/**
 * @member {Number} contactId
 */
UserDto.prototype.contactId = undefined;

/**
 * @member {module:model/ContactDto} contact
 */
UserDto.prototype.contact = undefined;

/**
 * @member {Number} departmentId
 */
UserDto.prototype.departmentId = undefined;

/**
 * @member {module:model/DepartmentDto} department
 */
UserDto.prototype.department = undefined;

/**
 * @member {Number} roleId
 */
UserDto.prototype.roleId = undefined;

/**
 * @member {module:model/RoleDto} role
 */
UserDto.prototype.role = undefined;

/**
 * @member {Number} subRoleId
 */
UserDto.prototype.subRoleId = undefined;

/**
 * @member {module:model/SubRoleDto} subRole
 */
UserDto.prototype.subRole = undefined;

/**
 * @member {module:model/ClientDto} client
 */
UserDto.prototype.client = undefined;

/**
 * @member {String} type
 */
UserDto.prototype.type = undefined;

