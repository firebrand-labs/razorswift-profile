/*
 * Extractor Engine API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v3.76(UAT)
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {CandidateAndAddressDto} from './CandidateAndAddressDto';
import {CandidateAndLanguageDto} from './CandidateAndLanguageDto';
import {CandidateEmailDto} from './CandidateEmailDto';
import {CandidatePhoneDto} from './CandidatePhoneDto';
import {CandidateWebsiteDto} from './CandidateWebsiteDto';
import {EmploymentStatusType} from './EmploymentStatusType';
import {GenderType} from './GenderType';
import {NormalizationStatus} from './NormalizationStatus';

/**
 * The CandidateCompactDto model module.
 * @module model/CandidateCompactDto
 * @version v3.76(UAT)
 */
export class CandidateCompactDto {
  /**
   * Constructs a new <code>CandidateCompactDto</code>.
   * @alias module:model/CandidateCompactDto
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>CandidateCompactDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CandidateCompactDto} obj Optional instance to populate.
   * @return {module:model/CandidateCompactDto} The populated <code>CandidateCompactDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CandidateCompactDto();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('uniqueGuid'))
        obj.uniqueGuid = ApiClient.convertToType(data['uniqueGuid'], 'String');
      if (data.hasOwnProperty('normalizationStatus'))
        obj.normalizationStatus = NormalizationStatus.constructFromObject(data['normalizationStatus']);
      if (data.hasOwnProperty('skillNormalizationStatus'))
        obj.skillNormalizationStatus = NormalizationStatus.constructFromObject(data['skillNormalizationStatus']);
      if (data.hasOwnProperty('projectNormalizationStatus'))
        obj.projectNormalizationStatus = NormalizationStatus.constructFromObject(data['projectNormalizationStatus']);
      if (data.hasOwnProperty('candidateCode'))
        obj.candidateCode = ApiClient.convertToType(data['candidateCode'], 'String');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('contactNumber'))
        obj.contactNumber = ApiClient.convertToType(data['contactNumber'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('slug'))
        obj.slug = ApiClient.convertToType(data['slug'], 'String');
      if (data.hasOwnProperty('isFresher'))
        obj.isFresher = ApiClient.convertToType(data['isFresher'], 'Boolean');
      if (data.hasOwnProperty('profileHeadLine'))
        obj.profileHeadLine = ApiClient.convertToType(data['profileHeadLine'], 'String');
      if (data.hasOwnProperty('about'))
        obj.about = ApiClient.convertToType(data['about'], 'String');
      if (data.hasOwnProperty('isAttachedtoJD'))
        obj.isAttachedtoJD = ApiClient.convertToType(data['isAttachedtoJD'], 'Boolean');
      if (data.hasOwnProperty('isStudent'))
        obj.isStudent = ApiClient.convertToType(data['isStudent'], 'Boolean');
      if (data.hasOwnProperty('primaryEducationInstituteId'))
        obj.primaryEducationInstituteId = ApiClient.convertToType(data['primaryEducationInstituteId'], 'Number');
      if (data.hasOwnProperty('profileImageId'))
        obj.profileImageId = ApiClient.convertToType(data['profileImageId'], 'Number');
      if (data.hasOwnProperty('resumeId'))
        obj.resumeId = ApiClient.convertToType(data['resumeId'], 'Number');
      if (data.hasOwnProperty('employmentStatus'))
        obj.employmentStatus = EmploymentStatusType.constructFromObject(data['employmentStatus']);
      if (data.hasOwnProperty('firstName'))
        obj.firstName = ApiClient.convertToType(data['firstName'], 'String');
      if (data.hasOwnProperty('middleName'))
        obj.middleName = ApiClient.convertToType(data['middleName'], 'String');
      if (data.hasOwnProperty('lastName'))
        obj.lastName = ApiClient.convertToType(data['lastName'], 'String');
      if (data.hasOwnProperty('fullName'))
        obj.fullName = ApiClient.convertToType(data['fullName'], 'String');
      if (data.hasOwnProperty('hobbiesAndInterests'))
        obj.hobbiesAndInterests = ApiClient.convertToType(data['hobbiesAndInterests'], 'String');
      if (data.hasOwnProperty('strengths'))
        obj.strengths = ApiClient.convertToType(data['strengths'], 'String');
      if (data.hasOwnProperty('dateOfBirth'))
        obj.dateOfBirth = ApiClient.convertToType(data['dateOfBirth'], 'Date');
      if (data.hasOwnProperty('gender'))
        obj.gender = GenderType.constructFromObject(data['gender']);
      if (data.hasOwnProperty('bloodGroup'))
        obj.bloodGroup = ApiClient.convertToType(data['bloodGroup'], 'String');
      if (data.hasOwnProperty('fatherName'))
        obj.fatherName = ApiClient.convertToType(data['fatherName'], 'String');
      if (data.hasOwnProperty('motherName'))
        obj.motherName = ApiClient.convertToType(data['motherName'], 'String');
      if (data.hasOwnProperty('maritalStatus'))
        obj.maritalStatus = ApiClient.convertToType(data['maritalStatus'], 'String');
      if (data.hasOwnProperty('nationality'))
        obj.nationality = ApiClient.convertToType(data['nationality'], 'String');
      if (data.hasOwnProperty('candidateLanguages'))
        obj.candidateLanguages = ApiClient.convertToType(data['candidateLanguages'], [CandidateAndLanguageDto]);
      if (data.hasOwnProperty('candidateEmails'))
        obj.candidateEmails = ApiClient.convertToType(data['candidateEmails'], [CandidateEmailDto]);
      if (data.hasOwnProperty('candidatePhones'))
        obj.candidatePhones = ApiClient.convertToType(data['candidatePhones'], [CandidatePhoneDto]);
      if (data.hasOwnProperty('candidateWebsites'))
        obj.candidateWebsites = ApiClient.convertToType(data['candidateWebsites'], [CandidateWebsiteDto]);
      if (data.hasOwnProperty('candidateAddresses'))
        obj.candidateAddresses = ApiClient.convertToType(data['candidateAddresses'], [CandidateAndAddressDto]);
    }
    return obj;
  }
}

/**
 * @member {Number} id
 */
CandidateCompactDto.prototype.id = undefined;

/**
 * @member {String} uniqueGuid
 */
CandidateCompactDto.prototype.uniqueGuid = undefined;

/**
 * @member {module:model/NormalizationStatus} normalizationStatus
 */
CandidateCompactDto.prototype.normalizationStatus = undefined;

/**
 * @member {module:model/NormalizationStatus} skillNormalizationStatus
 */
CandidateCompactDto.prototype.skillNormalizationStatus = undefined;

/**
 * @member {module:model/NormalizationStatus} projectNormalizationStatus
 */
CandidateCompactDto.prototype.projectNormalizationStatus = undefined;

/**
 * @member {String} candidateCode
 */
CandidateCompactDto.prototype.candidateCode = undefined;

/**
 * @member {String} email
 */
CandidateCompactDto.prototype.email = undefined;

/**
 * @member {String} contactNumber
 */
CandidateCompactDto.prototype.contactNumber = undefined;

/**
 * @member {String} status
 */
CandidateCompactDto.prototype.status = undefined;

/**
 * @member {String} slug
 */
CandidateCompactDto.prototype.slug = undefined;

/**
 * @member {Boolean} isFresher
 */
CandidateCompactDto.prototype.isFresher = undefined;

/**
 * @member {String} profileHeadLine
 */
CandidateCompactDto.prototype.profileHeadLine = undefined;

/**
 * @member {String} about
 */
CandidateCompactDto.prototype.about = undefined;

/**
 * @member {Boolean} isAttachedtoJD
 */
CandidateCompactDto.prototype.isAttachedtoJD = undefined;

/**
 * @member {Boolean} isStudent
 */
CandidateCompactDto.prototype.isStudent = undefined;

/**
 * @member {Number} primaryEducationInstituteId
 */
CandidateCompactDto.prototype.primaryEducationInstituteId = undefined;

/**
 * @member {Number} profileImageId
 */
CandidateCompactDto.prototype.profileImageId = undefined;

/**
 * @member {Number} resumeId
 */
CandidateCompactDto.prototype.resumeId = undefined;

/**
 * @member {module:model/EmploymentStatusType} employmentStatus
 */
CandidateCompactDto.prototype.employmentStatus = undefined;

/**
 * @member {String} firstName
 */
CandidateCompactDto.prototype.firstName = undefined;

/**
 * @member {String} middleName
 */
CandidateCompactDto.prototype.middleName = undefined;

/**
 * @member {String} lastName
 */
CandidateCompactDto.prototype.lastName = undefined;

/**
 * @member {String} fullName
 */
CandidateCompactDto.prototype.fullName = undefined;

/**
 * @member {String} hobbiesAndInterests
 */
CandidateCompactDto.prototype.hobbiesAndInterests = undefined;

/**
 * @member {String} strengths
 */
CandidateCompactDto.prototype.strengths = undefined;

/**
 * @member {Date} dateOfBirth
 */
CandidateCompactDto.prototype.dateOfBirth = undefined;

/**
 * @member {module:model/GenderType} gender
 */
CandidateCompactDto.prototype.gender = undefined;

/**
 * @member {String} bloodGroup
 */
CandidateCompactDto.prototype.bloodGroup = undefined;

/**
 * @member {String} fatherName
 */
CandidateCompactDto.prototype.fatherName = undefined;

/**
 * @member {String} motherName
 */
CandidateCompactDto.prototype.motherName = undefined;

/**
 * @member {String} maritalStatus
 */
CandidateCompactDto.prototype.maritalStatus = undefined;

/**
 * @member {String} nationality
 */
CandidateCompactDto.prototype.nationality = undefined;

/**
 * @member {Array.<module:model/CandidateAndLanguageDto>} candidateLanguages
 */
CandidateCompactDto.prototype.candidateLanguages = undefined;

/**
 * @member {Array.<module:model/CandidateEmailDto>} candidateEmails
 */
CandidateCompactDto.prototype.candidateEmails = undefined;

/**
 * @member {Array.<module:model/CandidatePhoneDto>} candidatePhones
 */
CandidateCompactDto.prototype.candidatePhones = undefined;

/**
 * @member {Array.<module:model/CandidateWebsiteDto>} candidateWebsites
 */
CandidateCompactDto.prototype.candidateWebsites = undefined;

/**
 * @member {Array.<module:model/CandidateAndAddressDto>} candidateAddresses
 */
CandidateCompactDto.prototype.candidateAddresses = undefined;

