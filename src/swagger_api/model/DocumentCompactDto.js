/*
 * Extractor Engine API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v3.76(UAT)
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {FileType} from './FileType';

/**
 * The DocumentCompactDto model module.
 * @module model/DocumentCompactDto
 * @version v3.76(UAT)
 */
export class DocumentCompactDto {
  /**
   * Constructs a new <code>DocumentCompactDto</code>.
   * @alias module:model/DocumentCompactDto
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>DocumentCompactDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DocumentCompactDto} obj Optional instance to populate.
   * @return {module:model/DocumentCompactDto} The populated <code>DocumentCompactDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DocumentCompactDto();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('path'))
        obj.path = ApiClient.convertToType(data['path'], 'String');
      if (data.hasOwnProperty('tags'))
        obj.tags = ApiClient.convertToType(data['tags'], 'String');
      if (data.hasOwnProperty('source'))
        obj.source = ApiClient.convertToType(data['source'], 'String');
      if (data.hasOwnProperty('length'))
        obj.length = ApiClient.convertToType(data['length'], 'Number');
      if (data.hasOwnProperty('savedFileName'))
        obj.savedFileName = ApiClient.convertToType(data['savedFileName'], 'String');
      if (data.hasOwnProperty('actualFileName'))
        obj.actualFileName = ApiClient.convertToType(data['actualFileName'], 'String');
      if (data.hasOwnProperty('fileType'))
        obj.fileType = FileType.constructFromObject(data['fileType']);
      if (data.hasOwnProperty('sthreeKey'))
        obj.sthreeKey = ApiClient.convertToType(data['sthreeKey'], 'String');
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], 'String');
    }
    return obj;
  }
}

/**
 * @member {Number} id
 */
DocumentCompactDto.prototype.id = undefined;

/**
 * @member {String} name
 */
DocumentCompactDto.prototype.name = undefined;

/**
 * @member {String} path
 */
DocumentCompactDto.prototype.path = undefined;

/**
 * @member {String} tags
 */
DocumentCompactDto.prototype.tags = undefined;

/**
 * @member {String} source
 */
DocumentCompactDto.prototype.source = undefined;

/**
 * @member {Number} length
 */
DocumentCompactDto.prototype.length = undefined;

/**
 * @member {String} savedFileName
 */
DocumentCompactDto.prototype.savedFileName = undefined;

/**
 * @member {String} actualFileName
 */
DocumentCompactDto.prototype.actualFileName = undefined;

/**
 * @member {module:model/FileType} fileType
 */
DocumentCompactDto.prototype.fileType = undefined;

/**
 * @member {String} sthreeKey
 */
DocumentCompactDto.prototype.sthreeKey = undefined;

/**
 * @member {String} url
 */
DocumentCompactDto.prototype.url = undefined;

